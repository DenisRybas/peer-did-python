name: tests

on: [ pull_request ]


env:
  PKG_NAME: peerdid


jobs:

  check-version-bumped:
    name: Check version bumped
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Get current version
        id: current_version
        run: |
          python -m pip install --upgrade pip
          pip install . --no-deps
          out="$(pip show ${{ env.PKG_NAME }} | grep Version: | cut -d'' '' -f 2)"
          echo "$out"
          echo "::set-output name=current_version::$out"
        shell: bash
      - name: Get latest tag
        id: version_latest
        run: |
          out="$(git describe --abbrev=0 --tags | cut -d'v' -f 2)"
          echo "$out"
          echo "::set-output name=version_latest::$out"
        shell: bash
      - name: fail unless bumped
        # TODO check if greater
        if: steps.version_latest.outputs.version_latest == steps.current_version.outputs.current_version
        run: exit 1

  build:
    strategy:
      matrix:
        python-version: [ 3.5, 3.6, 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pytest
